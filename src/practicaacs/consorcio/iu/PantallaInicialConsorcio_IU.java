package practicaacs.consorcio.iu;

import java.awt.Dimension;
import java.util.ArrayList;

import practicaacs.consorcio.Consorcio;
import practicaacs.consorcio.bd.Database_lib;


public class PantallaInicialConsorcio_IU extends javax.swing.JFrame {

    private Consorcio consorcio;
	private MostrarBD_IU interfaz_bd;

	/**
     * Creates new form PantallaInicial
     */
    public PantallaInicialConsorcio_IU(Consorcio cons) {
		this.consorcio = cons;
		this.interfaz_bd = new MostrarBD_IU();
        initComponents();
        this.interfaz_bd.actualizar();
    	actualizarListaCajeros();
    	actualizarListaBancos();
    	this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);  
        this.setExtendedState(ICONIFIED);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        SolButton = new javax.swing.JButton();
        FinButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cajerosList = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        BancosLIst = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextFieldCuenta = new javax.swing.JTextField();
        TextFieldTarjeta = new javax.swing.JTextField();
        ButtonTarjeta = new javax.swing.JButton();
        ButtonCuenta = new javax.swing.JButton();
        LabelCuenta = new javax.swing.JLabel();
        ButtonEstado = new javax.swing.JButton();
        LabelTarjeta = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consorcio");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        SolButton.setLabel("Solicitar Recuperaci√≥n");
        SolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolButtonActionPerformed(evt);
            }
        });

        FinButton.setText("Solicitar Fin Recuperacion");
        FinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinButtonActionPerformed(evt);
            }
        });

        cajerosList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(cajerosList);

        BancosLIst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(BancosLIst);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hacia/Desde Banco");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Hacia/Desde Cajero");

        ButtonTarjeta.setText("Inserta Tarjeta");
        ButtonTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTarjetaActionPerformed(evt);
            }
        });

        ButtonCuenta.setText("Inserta Cuenta");
        ButtonCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCuentaActionPerformed(evt);
            }
        });

        LabelCuenta.setText("Error insertando Cuenta");
        LabelCuenta.setVisible(false);
        
        ButtonEstado.setText("Cambiar Estado");
        ButtonEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEstadoActionPerformed(evt);
            }
        });

        LabelTarjeta.setText("Error insertando Tarjeta");
        LabelTarjeta.setVisible(false);
        
        jMenu1.setText("File");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");

        jMenuItem2.setText("Acerca de");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SolButton)
                            .addComponent(FinButton))
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(LabelTarjeta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TextFieldTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ButtonTarjeta)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 374, Short.MAX_VALUE)
                                .addComponent(ButtonEstado))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TextFieldCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(ButtonCuenta)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SolButton)
                    .addComponent(TextFieldTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonTarjeta)
                    .addComponent(ButtonEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelTarjeta)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FinButton)
                            .addComponent(TextFieldCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ButtonCuenta)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelCuenta)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>                        

    /**
     * Solicitar Recuperacion
     */
    private void SolButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        this.setVisible(false);
        new SolRecuperacion_IU(this,this.consorcio).setVisible(true);
    }                                         

    /**
     * Solicitar Finalizar Recuperacion
     */
    private void FinButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        this.setVisible(false);
        new FinRecuperacion_IU(this,this.consorcio).setVisible(true);
    }                                         

    /**
     * Menu salir
     * @param evt 
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        this.dispose();
    }                                          

    /**
     * Menu acerca de
     * @param evt
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        new Acerca_de_IU(this,false);
    }                                          

    /**
     * Boton tarjeta
     * @param evt
     */
    private void ButtonTarjetaActionPerformed(java.awt.event.ActionEvent evt) {
    	String tarjeta = this.TextFieldTarjeta.getText();
    	
    	try{
	        //Comprobamos si se ha introducido la tarjeta
	        if(tarjeta.equals("")){
	        	throw new NumberFormatException("No hay introducido ninguna tarjeta...");
	        }
	        
	        //Comprobamos si existe la Tarjeta
			if(Database_lib.getInstance().existeTarjeta(tarjeta))
	    		throw new NumberFormatException("Ya existe la tarjeta introducida...");
			
			//Insertamos la tarjeta
			Database_lib.getInstance().insertarTarjeta(tarjeta);
	       
    	}catch(NumberFormatException e){
    		this.LabelCuenta.setText(e.getMessage());
        	this.LabelCuenta.setVisible(true);
    		return;
    	}
    	this.LabelCuenta.setVisible(true);
    	this.LabelCuenta.setText("Insertada tarjeta:"+tarjeta);
    }                                             

    /**
     * Boton cuenta
     * @param evt
     */
    private void ButtonCuentaActionPerformed(java.awt.event.ActionEvent evt) {
    	String tarjeta = this.TextFieldTarjeta.getText();
    	String cuenta = this.TextFieldCuenta.getText();
    	int cuenta_real = 0;
    	
    	try{
	        //Comprobamos si se ha introducido la tarjeta
	        if(tarjeta.equals("")){
	        	throw new NumberFormatException("No hay introducido ninguna tarjeta...");
	        }
	
	        //Comprobamos si se ha introducido la cuenta
	        if(cuenta.equals("")){
	        	throw new NumberFormatException("No hay introducido ninguna cuenta...");
	        }
	        
	        //Comprobamos si es correcto la cuenta introducida (si es un numero)
	        try{
	        	cuenta_real = Integer.parseInt(cuenta);
	        	if(cuenta_real<0)
	        		throw new NumberFormatException();
	        }catch(NumberFormatException nfe){
	    		throw new NumberFormatException("Cuenta incorrecta...");
	        }
	        
	        //Comprobamos que el numero de cuentas no haya superado el maximo
	        if(Database_lib.getInstance().getNumCuentas(tarjeta)>=3)
	    		throw new NumberFormatException("Superado el n√∫mero de 3 cuentas asignadas a esta tarjeta...");
	        	
	        //Comprobamos si existe la tarjeta
			if(!Database_lib.getInstance().existeTarjeta(tarjeta))
	    		throw new NumberFormatException("No existe la tarjeta indicada...");
			
	        //Comprobamos si existe la cuenta
			if(Database_lib.getInstance().existeCuenta(tarjeta, cuenta_real))
	    		throw new NumberFormatException("Ya existe la cuenta para dicha tarjeta.");
			
			//Insertamos la cuenta
			Database_lib.getInstance().insertarCuenta(tarjeta,cuenta_real);
	        
    	}catch(NumberFormatException e){
    		this.LabelCuenta.setText(e.getMessage());
        	this.LabelCuenta.setVisible(true);
    		return;	
    	}
    	this.LabelCuenta.setVisible(true);
    	this.LabelCuenta.setText("Insertada cuenta:" + cuenta);
    }                                            

    /**
     * Boton cambiar estado
     * @param evt
     */
    private void ButtonEstadoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        this.consorcio.getBancos_server().cambiar_estado();
    }                                            
                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaInicialConsorcio_IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaInicialConsorcio_IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaInicialConsorcio_IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaInicialConsorcio_IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaInicialConsorcio_IU(null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JList BancosLIst;
    private javax.swing.JButton ButtonCuenta;
    private javax.swing.JButton ButtonEstado;
    private javax.swing.JButton ButtonTarjeta;
    private javax.swing.JButton FinButton;
    private javax.swing.JLabel LabelCuenta;
    private javax.swing.JLabel LabelTarjeta;
    private javax.swing.JButton SolButton;
    private javax.swing.JTextField TextFieldCuenta;
    private javax.swing.JTextField TextFieldTarjeta;
    private javax.swing.JList cajerosList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration                   

    public void actualizarListaCajeros(){
    	ArrayList<String> lista = Database_lib.getInstance().getMensajesCajeroToString();
        this.cajerosList.setListData(lista.toArray());
    	this.interfaz_bd.actualizar();
   }
    
    public void actualizarListaBancos(){
    	ArrayList<String> lista = Database_lib.getInstance().getMensajesBancoToString();
        this.BancosLIst.setListData(lista.toArray());
    	this.interfaz_bd.actualizar();
    }
    
}





